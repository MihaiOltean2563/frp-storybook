{
    "pipes": [],
    "interfaces": [
        {
            "name": "Viewport",
            "id": "interface-Viewport-a384ddbfdcd0e8e7f3b5f653925269b0",
            "file": "src/utils/viewport-map.interface.ts",
            "type": "interface",
            "sourceCode": "export type Styles = ViewportStyles | ((s: ViewportStyles) => ViewportStyles) | null;\n\nexport interface Viewport {\n  name: string;\n  styles: Styles;\n  type: 'desktop' | 'mobile' | 'tablet' | 'other';\n}\n\nexport interface ViewportStyles {\n  height: string;\n  width: string;\n}\n\nexport interface ViewportMap {\n  [key: string]: Viewport;\n}",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "styles",
                    "type": "Styles",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "type": "\"desktop\" | \"mobile\" | \"tablet\" | \"other\"",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ViewportMap",
            "id": "interface-ViewportMap-a384ddbfdcd0e8e7f3b5f653925269b0",
            "file": "src/utils/viewport-map.interface.ts",
            "type": "interface",
            "sourceCode": "export type Styles = ViewportStyles | ((s: ViewportStyles) => ViewportStyles) | null;\n\nexport interface Viewport {\n  name: string;\n  styles: Styles;\n  type: 'desktop' | 'mobile' | 'tablet' | 'other';\n}\n\nexport interface ViewportStyles {\n  height: string;\n  width: string;\n}\n\nexport interface ViewportMap {\n  [key: string]: Viewport;\n}",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-a384ddbfdcd0e8e7f3b5f653925269b0",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "returnType": "Viewport",
                    "line": 14
                }
            ],
            "kind": 159,
            "methods": []
        },
        {
            "name": "ViewportStyles",
            "id": "interface-ViewportStyles-a384ddbfdcd0e8e7f3b5f653925269b0",
            "file": "src/utils/viewport-map.interface.ts",
            "type": "interface",
            "sourceCode": "export type Styles = ViewportStyles | ((s: ViewportStyles) => ViewportStyles) | null;\n\nexport interface Viewport {\n  name: string;\n  styles: Styles;\n  type: 'desktop' | 'mobile' | 'tablet' | 'other';\n}\n\nexport interface ViewportStyles {\n  height: string;\n  width: string;\n}\n\nexport interface ViewportMap {\n  [key: string]: Viewport;\n}",
            "properties": [
                {
                    "name": "height",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "width",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-cd23493ffa47252ea2495a2ef2e01607",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "themes",
                    "defaultValue": "['beko', 'hotpoint']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "defaultValue": "'frp'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "loadStyle",
                    "args": [
                        {
                            "name": "styleName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "styleName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Inject } from '@angular/core';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frp';\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  themes = ['beko', 'hotpoint'];\n\n  ngOnInit() {\n    this.loadStyle('beko.css');\n  }\n\n  loadStyle(styleName: string) {\n    const head = this.document.getElementsByTagName('head')[0];\n\n    let themeLink = this.document.getElementById('theme') as HTMLLinkElement;\n    if (themeLink) {\n      themeLink.href = styleName;\n    } else {\n      const style = this.document.createElement('link');\n      style.id = 'theme';\n      style.rel = 'stylesheet';\n      style.href = `${styleName}`;\n\n      head.appendChild(style);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<span>{{ title }} app is running!</span>\n\n<app-button (click)=\"loadStyle('beko.css')\">beko</app-button>\n<app-button (click)=\"loadStyle('hotpoint.css')\">hotpoint</app-button>\n"
        },
        {
            "name": "BordersComponent",
            "id": "component-BordersComponent-7dee8d3342d4e0f8643e1eacbcfbe98f",
            "file": "src/app/styleguide/typography/borders/borders.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-borders",
            "styleUrls": [
                "./borders.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./borders.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-borders',\n  templateUrl: './borders.component.html',\n  styleUrls: ['./borders.component.scss']\n})\nexport class BordersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".border-demo-box{\n\twidth: 200px;\n\theight: 50px;\n\tbackground: var(--color-white);\n}",
                    "styleUrl": "./borders.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container padding-y-sm\">\n  <!-- Border position -->\n  <div class=\"border-demo-box margin-bottom-xs border\">.border</div>\n  <div class=\"border-demo-box margin-bottom-xs border-bottom\">.border bottom</div>\n  <div class=\"border-demo-box margin-bottom-xs border-top\">.border-top</div>\n  <div class=\"border-demo-box margin-bottom-xs border-right\">.border-right</div>\n  <div class=\"border-demo-box margin-bottom-xs border-left\">.border left</div>\n  <!-- Border thickness-->\n  <div class=\"border-demo-box margin-bottom-xs border border-2\">.border-2</div> \n  <div class=\"border-demo-box margin-bottom-xs border border-3\">.border-3</div> \n  <div class=\"border-demo-box margin-bottom-xs border border-4\">.border-4</div>\n  <!-- Border black and white-->\n  <div class=\"border-demo-box margin-bottom-xs border border-black\">.border-black</div> \n  <div class=\"border-demo-box margin-bottom-xs border border-white\">.border-white</div> \n  <!-- Border contrasts - gray -->\n  <div class=\"border-demo-box margin-bottom-xs border border-contrast-lower\">.border-contrast-lower</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-contrast-low\">.border-contrast-low</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-contrast-medium\">.border-contrast-medium</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-contrast-high\">.border-contrast-high</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-contrast-higher\">.border-contrast-higher</div>\n  <!-- Border contrasts - primary -->\n  <div class=\"border-demo-box margin-bottom-xs border border-primary-darker\">.border-primary-darker</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-primary-dark\">.border-primary-dark</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-primary\">.border-primary</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-primary-light\">.border-primary-light</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-primary-lighter\">.border-primary-lighter</div>\n  <!-- Border contrasts - accent -->\n  <div class=\"border-demo-box margin-bottom-xs border border-accent-darker\">.border-accent-darker</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-accent-dark\">.border-accent-dark</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-accent\">.border-accent</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-accent-light\">.border-accent-light</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-accent-lighter\">.border-accent-lighter</div>\n  <!-- Border contrasts - success -->\n  <div class=\"border-demo-box margin-bottom-xs border border-success-darker\">.border-success-darker</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-success-dark\">.border-success-dark</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-success\">.border-success</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-success-light\">.border-success-light</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-success-lighter\">.border-success-lighter</div>\n  <!-- Border contrasts - warning -->\n  <div class=\"border-demo-box margin-bottom-xs border border-warning-darker\">.border-warning-darker</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-warning-dark\">.border-warning-dark</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-warning\">.border-warning</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-warning-light\">.border-warning-light</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-warning-lighter\">.border-warning-lighter</div>\n  <!-- Border contrasts - error -->\n  <div class=\"border-demo-box margin-bottom-xs border border-error-darker\">.border-error-darker</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-error-dark\">.border-error-dark</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-error\">.border-error</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-error-light\">.border-error-light</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-error-lighter\">.border-error-lighter</div>\n  <!-- Border opacity -->\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-90%\">.border-opacity-90%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-80%\">.border-opacity-80%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-70%\">.border-opacity-70%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-60%\">.border-opacity-60%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-50%\">.border-opacity-50%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-40%\">.border-opacity-40%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-30%\">.border-opacity-30%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-20%\">.border-opacity-20%</div>\n  <div class=\"border-demo-box margin-bottom-xs border border-black border-opacity-10%\">.border-opacity-10%</div>\n\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-ea592822f4193eadb601792e7e7284f2",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "description": "<ul>\n<li>Specify whether the button should show a loading spinner </li>\n</ul>\n",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "theme",
                    "defaultValue": "'default'",
                    "description": "<ul>\n<li>Specify a brand name string that matches a scss declaration in _colors.scss</li>\n</ul>\n",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "description": "<ul>\n<li>Specify the variant of the button </li>\n</ul>\n",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\""
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "defaultValue": "new EventEmitter()",
                    "description": "<ul>\n<li>Output - button clicked </li>\n</ul>\n",
                    "line": 21,
                    "type": "EventEmitter<null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "description": "<ul>\n<li>Emit button clicked </li>\n</ul>\n",
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent{\n  /*** Specify the variant of the button */\n  @Input() type: 'primary' | 'secondary' = 'primary';\n\n  /*** \n   * Specify a brand name string that matches a scss declaration in _colors.scss\n  */\n  @Input() theme: string = 'default';\n  \n  /*** Specify whether the button should show a loading spinner */\n  @Input() isLoading: boolean = false;\n\n  /*** Output - button clicked */\n  @Output() clicked: EventEmitter<null> = new EventEmitter();\n\n  /*** Emit button clicked */\n  public onClick(): void {\n    this.clicked.emit();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\n  display: inline-block;\n}\n\n// .btn{\n//   text-align: center;\n//   font-size: 16px;\n//   letter-spacing: normal;\n//   line-height: normal;\n//   width: 100%;\n//   padding: 12px 16px;\n//   font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;\n//   background-color: #1FB5BE;\n//   border-style: solid;\n//   border-color: #1FB5BE;\n//   cursor: pointer;\n//   color: #fff;\n//   border-radius: 3px;\n\n//   &--secondary{\n//     background-color: #fff;\n//     color: #1FB5BE;\n//     border-width: 2px;\n//   }\n\n//   &.loading-ring{\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     pointer-events: none;\n//     .content{\n//       visibility: hidden;\n//     }\n//     div:not(.content){\n//       box-sizing: border-box;\n//       width: 25px;\n//       height: 25px;\n//       border: 2px solid #1FB5BE;\n//       border-top-color: #fff;\n//       border-right-color: #fff;\n//       border-radius: 50%;\n//       animation: 1s spin infinite ease-in-out;\n//       position: absolute;\n//     }\n//   }\n// }\n\n// @keyframes spin {\n//   to{\n//     transform: rotate(360deg);\n//   }\n// }",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  class=\"btn btn--{{type}}\"\n  [ngClass]=\"{'loading-ring': isLoading }\"\n  (click)=\"onClick()\">\n  <div></div>\n  <div class=\"content\">\n    <ng-content></ng-content>\n  </div>\n</button>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-280777f2a18219accd4db1e38923db1c",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>checkbox works!</p>\n"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-604e1b4d0dab0f387258e69a32674a6c",
            "file": "src/app/styleguide/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "description": "<p>Initializing all colors</p>\n"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-colors',\n  templateUrl: './colors.component.html',\n  styleUrls: ['./colors.component.scss']\n})\nexport class ColorsComponent implements OnInit {\n\n  constructor() { }\n\n  /**\n    Initializing all colors\n  **/\n  ngOnInit(): void {\n  }\n\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".square{\n  height: 100px;\n}\n",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container max-width-md padding-y-md\">\n  <!-- Beko -->\n  <div class=\"theme\" data-theme='beko'>\n    <h5 class=\"padding-sm\">Beko</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-primary-lighter\"></div>\n      <div class=\"col square bg-primary-light\"></div>\n      <div class=\"col square bg-primary\"></div>\n      <div class=\"col square bg-primary-dark\"></div>\n      <div class=\"col square bg-primary-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-lighter</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-light</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary: #0083BE</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-dark</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-darker</div>\n    </div>\n  </div>\n  <!-- Hoover -->\n  <div class=\"theme\" data-theme='hoover'>\n    <h5 class=\"padding-sm\">Hoover</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-primary-lighter\"></div>\n      <div class=\"col square bg-primary-light\"></div>\n      <div class=\"col square bg-primary\"></div>\n      <div class=\"col square bg-primary-dark\"></div>\n      <div class=\"col square bg-primary-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-lighter</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-light</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary: #DD052b</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-dark</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-darker</div>\n    </div>\n  </div>\n  <!-- Candy -->\n  <div class=\"theme\" data-theme='candy'>\n    <h5 class=\"padding-sm\">Candy</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-primary-lighter\"></div>\n      <div class=\"col square bg-primary-light\"></div>\n      <div class=\"col square bg-primary\"></div>\n      <div class=\"col square bg-primary-dark\"></div>\n      <div class=\"col square bg-primary-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-lighter</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-light</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary: #00AEE6</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-dark</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-darker</div>\n    </div>\n  </div>\n  <!-- Hotpoint -->\n  <div class=\"theme\" data-theme='hotpoint'>\n    <h5 class=\"padding-sm\">Hotpoint</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-primary-lighter\"></div>\n      <div class=\"col square bg-primary-light\"></div>\n      <div class=\"col square bg-primary\"></div>\n      <div class=\"col square bg-primary-dark\"></div>\n      <div class=\"col square bg-primary-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-lighter</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-light</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary: #1FB5BE</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-dark</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-primary-darker</div>\n    </div>\n  </div>\n  <!-- Color Success -->\n  <div class=\"theme\">\n    <h5 class=\"padding-sm\">Color Success</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-success-lighter\"></div>\n      <div class=\"col square bg-success-light\"></div>\n      <div class=\"col square bg-success\"></div>\n      <div class=\"col square bg-success-dark\"></div>\n      <div class=\"col square bg-success-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-success-lower</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-success-low</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-success-medium</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-success-high</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-success-higher</div>\n    </div>\n  </div>\n  <!-- Color Error -->\n  <div class=\"theme\">\n    <h5 class=\"padding-sm\">Color Error</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-error-lighter\"></div>\n      <div class=\"col square bg-error-light\"></div>\n      <div class=\"col square bg-error\"></div>\n      <div class=\"col square bg-error-dark\"></div>\n      <div class=\"col square bg-error-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-error-lower</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-error-low</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-error-medium</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-error-high</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-error-higher</div>\n    </div>\n  </div>\n  <!-- Color Warning -->\n  <div class=\"theme\">\n    <h5 class=\"padding-sm\">Color Warning</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-warning-lighter\"></div>\n      <div class=\"col square bg-warning-light\"></div>\n      <div class=\"col square bg-warning\"></div>\n      <div class=\"col square bg-warning-dark\"></div>\n      <div class=\"col square bg-warning-darker\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-warning-lower</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-warning-low</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-warning-medium</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-warning-high</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-warning-higher</div>\n    </div>\n  </div>\n   <!-- Contrast Scale -->\n  <div class=\"theme\">\n    <h5 class=\"padding-sm\">Contrast Scale</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg\"></div>\n      <div class=\"col square bg-contrast-lower\"></div>\n      <div class=\"col square bg-contrast-low\"></div>\n      <div class=\"col square bg-contrast-medium\"></div>\n      <div class=\"col square bg-contrast-high\"></div>\n      <div class=\"col square bg-contrast-higher\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--color-bg</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-contrast-lower</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-contrast-low</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-contrast-medium</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-contrast-high</div>\n      <div class=\"col text-xs text-center padding-top-sm\">--color-contrast-higher</div>\n    </div>\n  </div>\n   <!-- Color Black -->\n   <div class=\"theme\">\n    <h5 class=\"padding-sm\">Color Black</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-black\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--bg-black</div>\n    </div>\n  </div>\n  <!-- Color White -->\n   <div class=\"theme\">\n    <h5 class=\"padding-sm\">Color White</h5>\n    <div class=\"grid margin-top\">\n      <div class=\"col square bg-white border border-contrast-low border-2\"></div>\n    </div>\n    <div class=\"grid\">\n      <div class=\"col text-xs text-center padding-top-sm\">--bg-white</div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ContainerComponent",
            "id": "component-ContainerComponent-9e4d02c5df9267187315e0c21c533b67",
            "file": "src/app/styleguide/layout/container/container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-container",
            "styleUrls": [
                "./container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component{\n    background: var(--color-contrast-medium);\n    color: var(--color-contrast-lower);\n    padding: var(--component-padding)\n}",
                    "styleUrl": "./container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container max-width-adaptive component margin-y-sm\">\n    Container test here\n</div>\n\n"
        },
        {
            "name": "GridComponent",
            "id": "component-GridComponent-041c6a7b2e2119b56f09743bc7708ea4",
            "file": "src/app/styleguide/layout/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grid",
            "styleUrls": [
                "./grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".child{\n    background: var(--color-primary);\n}\n.parent > * {\n\tbackground-color: var(--color-primary);\n\theight: 60px;\n}",
                    "styleUrl": "./grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container container--adaptive-lg ba margin-y-md\">\n  <!-- Responsive Grid Example -->\n  <div class=\"parent grid gap-xs\" data-theme='hoover'>\n    <div class=\"col-6@sm\"></div>\n    <div class=\"col-6@sm\"></div>\n    <div class=\"col-3@md\"></div>\n    <div class=\"col-3@md\"></div>\n    <div class=\"col-3@md\"></div>\n    <div class=\"col-3@md\"></div>\n    <div class=\"col-2@lg\"></div>\n    <div class=\"col-2@lg\"></div>\n    <div class=\"col-2@lg\"></div>\n    <div class=\"col-2@lg\"></div>\n    <div class=\"col-2@lg\"></div>\n    <div class=\"col-2@lg\"></div>\n  </div>\n  \n</div>  "
        },
        {
            "name": "IconsComponent",
            "id": "component-IconsComponent-16eaf253828abc730ab81227f032729e",
            "file": "src/app/styleguide/icons/icons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icons",
            "styleUrls": [
                "./icons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "description": "<p>*\nSpecify the corresponding class</p>\n",
                    "line": 38,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appIcons",
                    "defaultValue": "[\n    'cooker',\n    'dishwasher',\n    'fridge-freezer',\n    'other-appliances',\n    'tumble-dryer',\n    'washing-machine',\n    'tip',\n    'brochure',\n    'settings',\n    'cross',\n    'tick',\n    'breakdown',\n    'delivery',\n    'repair-engineer',\n    'savings',\n    'accidental-damage',\n    'arrow-down'\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Classes for all icons</p>\n",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icons',\n  templateUrl: './icons.component.html',\n  styleUrls: ['./icons.component.scss']\n})\nexport class IconsComponent implements OnInit {\n\n  constructor() { }\n  /**\n * Classes for all icons\n */\n  public appIcons = [\n    'cooker',\n    'dishwasher',\n    'fridge-freezer',\n    'other-appliances',\n    'tumble-dryer',\n    'washing-machine',\n    'tip',\n    'brochure',\n    'settings',\n    'cross',\n    'tick',\n    'breakdown',\n    'delivery',\n    'repair-engineer',\n    'savings',\n    'accidental-damage',\n    'arrow-down'\n  ];\n  ngOnInit(): void {\n  }\n  /***\n   *  Specify the corresponding class\n  * */\n  @Input() type: string;\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./icons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container max-width-xl padding-y-md\">\n\n  <h4 class=\"padding-bottom-sm text-underline font-italic\">Colors</h4>\n  <div class=\"grid\">\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\" data-theme=\"beko\">\n      <div class=\"icon icon-cooker col col-2 icon--lg padding-top-xs color-primary\"></div>\n      <div class=\"text-xs padding-y-sm color-primary\">Beko</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\" data-theme=\"hoover\">\n      <div class=\"icon icon-dishwasher col col-2 icon--lg padding-top-xs color-primary\"></div>\n      <div class=\"text-xs padding-y-sm color-primary\">Hoover</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\" data-theme=\"candy\">\n      <div class=\"icon icon-tumble-dryer col col-2 icon--lg padding-top-xs color-primary\"></div>\n      <div class=\"text-xs padding-y-sm color-primary\">Candy</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\" data-theme=\"hotpoint\">\n      <div class=\"icon icon-washing-machine col col-2 icon--lg padding-top-xs color-primary\"></div>\n      <div class=\"text-xs padding-y-sm color-primary\">Hotpoint</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-tick col col-2 icon--lg padding-top-xs color-success\"></div>\n      <div class=\"text-xs padding-y-sm color-success\">Success</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-cross col col-2 icon--lg padding-top-xs color-error\"></div>\n      <div class=\"text-xs padding-y-sm color-error\">Error</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-washing-machine col col-2 icon--lg padding-top-xs color-warning\"></div>\n      <div class=\"text-xs padding-y-sm color-warning\">Warning</div>\n    </div>\n  </div>\n\n  <h4 class=\"padding-y-sm text-underline font-italic\">Types</h4>\n  <div class=\"grid\">\n    <div class=\"col-3@sm col-2@md flex border flex-column items-center flex-center\" *ngFor=\"let type of appIcons\">\n        <div class=\"icon icon-{{type}} col col-2 icon--lg padding-top-xs\"></div>\n        <div class=\"text-xs padding-y-sm\">.icon-{{type}}</div>\n    </div>\n  </div>\n  \n  <h4 class=\"padding-y-sm text-underline font-italic\">Sizes</h4>\n  <div class=\"grid\">\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--xxs\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--xxs</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--xs\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--xs</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--sm\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--sm</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--md\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--md</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--lg\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--lg</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--xl\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--xl</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--xxl\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--xxl</div>\n    </div>\n    <div class=\"col-3@sm col-2@md flex flex-column items-center flex-center border\">\n      <div class=\"icon icon-savings icon--xxxl\"></div>\n      <div class=\"text-xs padding-y-sm\">.icon--xxxl</div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TypographyComponent",
            "id": "component-TypographyComponent-71bbce9ed32e2158a91db1452e42c91a",
            "file": "src/app/styleguide/typography/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [
                "./typography.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-typography',\n  templateUrl: './typography.component.html',\n  styleUrls: ['./typography.component.scss']\n})\nexport class TypographyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".typography{\n  p{\n    line-height: calc(var(--body-line-height) * var(--line-height-multiplier, 1));\n  }\n}",
                    "styleUrl": "./typography.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container typography\">\n  <!-- Font-family -->\n  <h4 class=\"padding-top-xs padding-bottom-xs font-italic text-underline\">Font family</h4>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--font-primary</p>\n  <p class=\"text-lg\">The quick brown fox jumps over the lazy dog</p>\n\n  <!--Type Scale -->\n  <h4 class=\"padding-top-xs padding-bottom-xs margin-top-md font-italic text-underline\">Type Scale</h4>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-xxxxl</p>\n  <p class=\"text-xxxxl border-bottom padding-y-xxxs\">Display Text Huge</p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-xxxl</p>\n  <p class=\"text-xxxl border-bottom padding-y-xxxs\">Heading 1</p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-xxl</p>\n  <p class=\"text-xxl border-bottom padding-y-xxxs\">Heading 2</p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-xl</p>\n  <p class=\"text-xl border-bottom padding-y-xxxs\">Heading 3</p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-md</p>\n  <p class=\"text-md border-bottom padding-y-xxxs\">Heading 4</p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-base</p>\n  <p class=\"text-base border-bottom padding-y-xxxs\">\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis modi, voluptate temporibus, voluptas dicta quibusdam iste dolores repudiandae aperiam tenetur, delectus laborum nobis nostrum consectetur error perspiciatis. Cum laudantium velit provident veritatis corrupti reiciendis iure, architecto ab perferendis, laboriosam voluptatum minima vero.\n  </p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-sm</p>\n  <p class=\"text-sm border-bottom padding-y-xxxs\">\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis modi, voluptate temporibus, voluptas dicta quibusdam iste dolores repudiandae aperiam tenetur, delectus laborum nobis nostrum consectetur error perspiciatis. Cum laudantium velit provident veritatis corrupti reiciendis iure, architecto ab perferendis, laboriosam voluptatum minima vero.\n  </p>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-xs</p>\n  <p class=\"text-xs border-bottom padding-y-xxxs\">\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis modi, voluptate temporibus, voluptas dicta quibusdam iste dolores repudiandae aperiam tenetur, delectus laborum nobis nostrum consectetur error perspiciatis. Cum laudantium velit provident veritatis corrupti reiciendis iure, architecto ab perferendis, laboriosam voluptatum minima vero.\n  </p>\n\n  <!-- Responsive text size classes - also affected by the typescale -->\n  <h4 class=\"padding-top-xs padding-bottom-xs margin-top-md font-italic text-underline\">Responsive text sizes</h4>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">--text-xs | --text-sm@sm | --text-base@md | --text-md@lg | --text--lg@xl</p>\n  <p class=\"text-xs text-sm@sm text-base@md text-md@lg text-lg@xl padding-bottom-xs padding-top-xs\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis modi, voluptate temporibus, voluptas dicta quibusdam iste dolores repudiandae aperiam tenetur, delectus laborum nobis nostrum consectetur error perspiciatis. Cum laudantium velit provident veritatis corrupti reiciendis iure, architecto ab perferendis, laboriosam voluptatum minima vero.\n  </p>\n\n  <!-- Font weights -->\n  <h4 class=\"padding-top-xs padding-bottom-xs font-italic text-underline\">Font weights</h4>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">.font-light | .font-normal | .font-medium | .font-semibold | .font-bold</p>\n  <p class=\"font-light\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n  <p class=\"font-normal\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n  <p class=\"font-medium\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n  <p class=\"font-semibold\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n  <p class=\"font-bold\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n\n  <!-- Letter spacing -->\n  <h4 class=\"padding-top-xs padding-bottom-xs font-italic text-underline\">Letter spacing</h4>\n  <p class=\"text-xs padding-top-xs padding-bottom-xs\">.letter-spacing-sm | .letter-spacing-md | .letter-spacing-lg</p>\n  <p class=\"letter-spacing-sm\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n  <p class=\"letter-spacing-md\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n  <p class=\"letter-spacing-lg margin-bottom-xs\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BordersComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ColorsComponent"
                        },
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "GridComponent"
                        },
                        {
                            "name": "IconsComponent"
                        },
                        {
                            "name": "TypographyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Borders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/typography/borders/borders.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: BordersComponent,\n  template: `\n    <div class=\"story\">\n        <app-borders></app-borders>\n    </div>\n  `\n})"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/colors/colors.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: ColorsComponent,\n  template: `\n    <div class=\"color\">\n      <app-colors></app-colors>\n    </div>\n  `\n})"
            },
            {
                "name": "Containers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/layout/container/container.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: ContainerComponent,\n  template: `\n    <app-container></app-container> \n  `\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DEFAULT_VIEWPORT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/utils/viewport-map.ts",
                "type": "string",
                "defaultValue": "'responsive'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Grids",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/layout/grid/grid.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: GridComponent,\n  template: `\n    <div class=\"story\">\n      <app-grid></app-grid>\n    </div>\n  `\n})"
            },
            {
                "name": "Icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/icons/icons.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: IconsComponent,\n  template: `\n    <app-icons></app-icons>  \n  `\n})"
            },
            {
                "name": "INITIAL_VIEWPORTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/utils/viewport-map.ts",
                "type": "ViewportMap",
                "defaultValue": "{\n  iphone5: {\n    name: 'iPhone 5',\n    styles: {\n      height: '568px',\n      width: '320px',\n    },\n    type: 'mobile',\n  },\n  iphone6: {\n    name: 'iPhone 6',\n    styles: {\n      height: '667px',\n      width: '375px',\n    },\n    type: 'mobile',\n  },\n  iphone6p: {\n    name: 'iPhone 6 Plus',\n    styles: {\n      height: '736px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  iphone8p: {\n    name: 'iPhone 8 Plus',\n    styles: {\n      height: '736px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  iphonex: {\n    name: 'iPhone X',\n    styles: {\n      height: '812px',\n      width: '375px',\n    },\n    type: 'mobile',\n  },\n  iphonexr: {\n    name: 'iPhone XR',\n    styles: {\n      height: '896px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  iphonexsmax: {\n    name: 'iPhone XS Max',\n    styles: {\n      height: '896px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  ipad: {\n    name: 'iPad',\n    styles: {\n      height: '1024px',\n      width: '768px',\n    },\n    type: 'tablet',\n  },\n  ipad10p: {\n    name: 'iPad Pro 10.5-in',\n    styles: {\n      height: '1112px',\n      width: '834px',\n    },\n    type: 'tablet',\n  },\n  ipad12p: {\n    name: 'iPad Pro 12.9-in',\n    styles: {\n      height: '1366px',\n      width: '1024px',\n    },\n    type: 'tablet',\n  },\n  galaxys5: {\n    name: 'Galaxy S5',\n    styles: {\n      height: '640px',\n      width: '360px',\n    },\n    type: 'mobile',\n  },\n  galaxys9: {\n    name: 'Galaxy S9',\n    styles: {\n      height: '740px',\n      width: '360px',\n    },\n    type: 'mobile',\n  },\n  nexus5x: {\n    name: 'Nexus 5X',\n    styles: {\n      height: '660px',\n      width: '412px',\n    },\n    type: 'mobile',\n  },\n  nexus6p: {\n    name: 'Nexus 6P',\n    styles: {\n      height: '732px',\n      width: '412px',\n    },\n    type: 'mobile',\n  },\n  pixel: {\n    name: 'Pixel',\n    styles: {\n      height: '960px',\n      width: '540px',\n    },\n    type: 'mobile',\n  },\n  pixelxl: {\n    name: 'Pixel XL',\n    styles: {\n      height: '1280px',\n      width: '720px',\n    },\n    type: 'mobile',\n  },\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: ButtonComponent,\n  props: {\n    text: text('Button Text', 'Hello Loading'),\n    isLoading: boolean(loadingLabel, true),\n    theme: select(themesLabel, themesBrandsList, themesDefaultValue)\n  },\n  template: `\n    <div class=\"story margin-top-sm\">\n      <div class=\"container\">\n        <app-button [isLoading]=\"isLoading\">{{text}}</app-button>\n      </div>\n    </div>\n  `\n})"
            },
            {
                "name": "map",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "new Map()"
            },
            {
                "name": "MINIMAL_VIEWPORTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/utils/viewport-map.ts",
                "type": "ViewportMap",
                "defaultValue": "{\n  mobile1: {\n    name: 'Small mobile',\n    styles: {\n      height: '568px',\n      width: '320px',\n    },\n    type: 'mobile',\n  },\n  mobile2: {\n    name: 'Large mobile',\n    styles: {\n      height: '896px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  tablet: {\n    name: 'Tablet',\n    styles: {\n      height: '1112px',\n      width: '834px',\n    },\n    type: 'tablet',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: ButtonComponent,\n  props: {\n    text: text('Label', 'Hello Primary'),\n    isLoading: boolean(loadingLabel, loadingDefaultValue),\n    theme: select(themesLabel, themesBrandsList, themesDefaultValue)\n  },\n  template: `\n    <div class=\"story margin-top-sm\">\n      <div class=\"container\">\n        <app-button [isLoading]=\"isLoading\">{{text}}</app-button>\n      </div>\n    </div>\n  `\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "[]",
                "defaultValue": "[\n  map.get('loading').label,\n  map.get('loading').defaultValue,\n  map.get('themes').label,\n  map.get('themes').brands,\n  map.get('themes').defaultValue\n]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: ButtonComponent,\n  props: {\n    text: text('Button Text', 'Hello Secondary'),\n    isLoading: boolean(loadingLabel, loadingDefaultValue),\n    theme: select(themesLabel, themesBrandsList, themesDefaultValue)\n  },\n  template: `\n    <div class=\"story margin-top-sm\">\n      <div class=\"container\">\n        <app-button [type]=\"'secondary'\" [isLoading]=\"isLoading\">{{text}}</app-button>\n      </div>\n    </div>\n  `\n})"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/typography/typography/typography.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  component: TypographyComponent,\n  template: `\n   <app-typography></app-typography>\n  `\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Styles",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ViewportStyles |  | null",
                "file": "src/utils/viewport-map.interface.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/styleguide/typography/borders/borders.stories.ts": [
                {
                    "name": "Borders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/typography/borders/borders.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: BordersComponent,\n  template: `\n    <div class=\"story\">\n        <app-borders></app-borders>\n    </div>\n  `\n})"
                }
            ],
            "src/app/styleguide/colors/colors.stories.ts": [
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/colors/colors.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: ColorsComponent,\n  template: `\n    <div class=\"color\">\n      <app-colors></app-colors>\n    </div>\n  `\n})"
                }
            ],
            "src/app/styleguide/layout/container/container.stories.ts": [
                {
                    "name": "Containers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/layout/container/container.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: ContainerComponent,\n  template: `\n    <app-container></app-container> \n  `\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/utils/viewport-map.ts": [
                {
                    "name": "DEFAULT_VIEWPORT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/utils/viewport-map.ts",
                    "type": "string",
                    "defaultValue": "'responsive'"
                },
                {
                    "name": "INITIAL_VIEWPORTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/utils/viewport-map.ts",
                    "type": "ViewportMap",
                    "defaultValue": "{\n  iphone5: {\n    name: 'iPhone 5',\n    styles: {\n      height: '568px',\n      width: '320px',\n    },\n    type: 'mobile',\n  },\n  iphone6: {\n    name: 'iPhone 6',\n    styles: {\n      height: '667px',\n      width: '375px',\n    },\n    type: 'mobile',\n  },\n  iphone6p: {\n    name: 'iPhone 6 Plus',\n    styles: {\n      height: '736px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  iphone8p: {\n    name: 'iPhone 8 Plus',\n    styles: {\n      height: '736px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  iphonex: {\n    name: 'iPhone X',\n    styles: {\n      height: '812px',\n      width: '375px',\n    },\n    type: 'mobile',\n  },\n  iphonexr: {\n    name: 'iPhone XR',\n    styles: {\n      height: '896px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  iphonexsmax: {\n    name: 'iPhone XS Max',\n    styles: {\n      height: '896px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  ipad: {\n    name: 'iPad',\n    styles: {\n      height: '1024px',\n      width: '768px',\n    },\n    type: 'tablet',\n  },\n  ipad10p: {\n    name: 'iPad Pro 10.5-in',\n    styles: {\n      height: '1112px',\n      width: '834px',\n    },\n    type: 'tablet',\n  },\n  ipad12p: {\n    name: 'iPad Pro 12.9-in',\n    styles: {\n      height: '1366px',\n      width: '1024px',\n    },\n    type: 'tablet',\n  },\n  galaxys5: {\n    name: 'Galaxy S5',\n    styles: {\n      height: '640px',\n      width: '360px',\n    },\n    type: 'mobile',\n  },\n  galaxys9: {\n    name: 'Galaxy S9',\n    styles: {\n      height: '740px',\n      width: '360px',\n    },\n    type: 'mobile',\n  },\n  nexus5x: {\n    name: 'Nexus 5X',\n    styles: {\n      height: '660px',\n      width: '412px',\n    },\n    type: 'mobile',\n  },\n  nexus6p: {\n    name: 'Nexus 6P',\n    styles: {\n      height: '732px',\n      width: '412px',\n    },\n    type: 'mobile',\n  },\n  pixel: {\n    name: 'Pixel',\n    styles: {\n      height: '960px',\n      width: '540px',\n    },\n    type: 'mobile',\n  },\n  pixelxl: {\n    name: 'Pixel XL',\n    styles: {\n      height: '1280px',\n      width: '720px',\n    },\n    type: 'mobile',\n  },\n}"
                },
                {
                    "name": "MINIMAL_VIEWPORTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/utils/viewport-map.ts",
                    "type": "ViewportMap",
                    "defaultValue": "{\n  mobile1: {\n    name: 'Small mobile',\n    styles: {\n      height: '568px',\n      width: '320px',\n    },\n    type: 'mobile',\n  },\n  mobile2: {\n    name: 'Large mobile',\n    styles: {\n      height: '896px',\n      width: '414px',\n    },\n    type: 'mobile',\n  },\n  tablet: {\n    name: 'Tablet',\n    styles: {\n      height: '1112px',\n      width: '834px',\n    },\n    type: 'tablet',\n  },\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/styleguide/layout/grid/grid.stories.ts": [
                {
                    "name": "Grids",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/layout/grid/grid.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: GridComponent,\n  template: `\n    <div class=\"story\">\n      <app-grid></app-grid>\n    </div>\n  `\n})"
                }
            ],
            "src/app/styleguide/icons/icons.stories.ts": [
                {
                    "name": "Icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/icons/icons.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: IconsComponent,\n  template: `\n    <app-icons></app-icons>  \n  `\n})"
                }
            ],
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: ButtonComponent,\n  props: {\n    text: text('Button Text', 'Hello Loading'),\n    isLoading: boolean(loadingLabel, true),\n    theme: select(themesLabel, themesBrandsList, themesDefaultValue)\n  },\n  template: `\n    <div class=\"story margin-top-sm\">\n      <div class=\"container\">\n        <app-button [isLoading]=\"isLoading\">{{text}}</app-button>\n      </div>\n    </div>\n  `\n})"
                },
                {
                    "name": "map",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "new Map()"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: ButtonComponent,\n  props: {\n    text: text('Label', 'Hello Primary'),\n    isLoading: boolean(loadingLabel, loadingDefaultValue),\n    theme: select(themesLabel, themesBrandsList, themesDefaultValue)\n  },\n  template: `\n    <div class=\"story margin-top-sm\">\n      <div class=\"container\">\n        <app-button [isLoading]=\"isLoading\">{{text}}</app-button>\n      </div>\n    </div>\n  `\n})"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "[]",
                    "defaultValue": "[\n  map.get('loading').label,\n  map.get('loading').defaultValue,\n  map.get('themes').label,\n  map.get('themes').brands,\n  map.get('themes').defaultValue\n]"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: ButtonComponent,\n  props: {\n    text: text('Button Text', 'Hello Secondary'),\n    isLoading: boolean(loadingLabel, loadingDefaultValue),\n    theme: select(themesLabel, themesBrandsList, themesDefaultValue)\n  },\n  template: `\n    <div class=\"story margin-top-sm\">\n      <div class=\"container\">\n        <app-button [type]=\"'secondary'\" [isLoading]=\"isLoading\">{{text}}</app-button>\n      </div>\n    </div>\n  `\n})"
                }
            ],
            "src/app/styleguide/typography/typography/typography.stories.ts": [
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/typography/typography/typography.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  component: TypographyComponent,\n  template: `\n   <app-typography></app-typography>\n  `\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/utils/viewport-map.interface.ts": [
                {
                    "name": "Styles",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ViewportStyles |  | null",
                    "file": "src/utils/viewport-map.interface.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "map",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/styleguide/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/icons/icons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconsComponent",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "src/app/styleguide/icons/icons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/container/container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Containers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grids",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/borders/borders.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BordersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/borders/borders.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Borders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/viewport-map.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Viewport",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/utils/viewport-map.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ViewportMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/viewport-map.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ViewportStyles",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/utils/viewport-map.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_VIEWPORT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/viewport-map.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_VIEWPORTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/utils/viewport-map.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MINIMAL_VIEWPORTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}