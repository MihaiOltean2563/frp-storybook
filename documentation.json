{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-020b0efe772432eb6f6fe7fbcc37aac8",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'frp'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frp';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<span>{{ title }} app is running!</span>\n"
        },
        {
            "name": "BordersComponent",
            "id": "component-BordersComponent-7dee8d3342d4e0f8643e1eacbcfbe98f",
            "file": "src/app/styleguide/typography/borders/borders.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-borders",
            "styleUrls": [
                "./borders.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./borders.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-borders',\n  templateUrl: './borders.component.html',\n  styleUrls: ['./borders.component.scss']\n})\nexport class BordersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".border-demo-box{\r\n\twidth: 200px;\r\n\theight: 50px;\r\n\tbackground: var(--color-contrast-low);\r\n\tborder-color: var(--color-contrast-higher);\r\n}",
                    "styleUrl": "./borders.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"border-demo-box ba margin-bottom--sm\">ba = border all</div>\n<div class=\"border-demo-box bt margin-bottom--sm\">bt = border top</div>\n<div class=\"border-demo-box br margin-bottom--sm\">br = border right</div>\n<div class=\"border-demo-box bb margin-bottom--sm\">bb = border bottom</div>\n<div class=\"border-demo-box bl margin-bottom--sm\">bl = border left</div>  \n<!-- Opacity Borders -->\n<!-- <div class=\"border-demo-box ba-opa70\">ba-opa70 = border all opacity 70</div> -->"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-7d0333ff3f585b8690c16f3bf481dfe8",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "description": "<ul>\n<li>Specify whether the button should show a loading spinner </li>\n</ul>\n",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "description": "<ul>\n<li>Specify the variant of the button </li>\n</ul>\n",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\""
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "defaultValue": "new EventEmitter()",
                    "description": "<ul>\n<li>Output - button clicked </li>\n</ul>\n",
                    "line": 16,
                    "type": "EventEmitter<null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "description": "<ul>\n<li>Emit bbutton clicked </li>\n</ul>\n",
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n  /*** Specify the variant of the button */\n  @Input() type: 'primary' | 'secondary' = 'primary';\n  \n  /*** Specify whether the button should show a loading spinner */\n  @Input() isLoading: boolean = false;\n\n  /*** Output - button clicked */\n  @Output() clicked: EventEmitter<null> = new EventEmitter();\n  \n  /*** Emit bbutton clicked */\n  public onClick(): void {\n    this.clicked.emit();\n  }\n \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .btn{\r\n//   text-align: center;\r\n//   font-size: 16px;\r\n//   letter-spacing: normal;\r\n//   line-height: normal;\r\n//   width: 100%;\r\n//   padding: 12px 16px;\r\n//   font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;\r\n//   background-color: #1FB5BE;\r\n//   border-style: solid;\r\n//   border-color: #1FB5BE;\r\n//   cursor: pointer;\r\n//   color: #fff;\r\n//   border-radius: 3px;\r\n\r\n//   &--secondary{\r\n//     background-color: #fff;\r\n//     color: #1FB5BE;\r\n//     border-width: 2px;\r\n//   }\r\n\r\n//   &.loading-ring{\r\n//     display: flex;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     pointer-events: none;\r\n//     .content{\r\n//       visibility: hidden;\r\n//     }\r\n//     div:not(.content){\r\n//       box-sizing: border-box;\r\n//       width: 25px;\r\n//       height: 25px;\r\n//       border: 2px solid #1FB5BE;\r\n//       border-top-color: #fff;\r\n//       border-right-color: #fff;\r\n//       border-radius: 50%;\r\n//       animation: 1s spin infinite ease-in-out;\r\n//       position: absolute;\r\n//     }\r\n//   }\r\n// }\r\n\r\n// @keyframes spin {\r\n//   to{\r\n//     transform: rotate(360deg);\r\n//   }\r\n// }",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn btn--{{type}}\" \n  [ngClass]=\"{'loading-ring': isLoading }\"\n  (click)=\"onClick()\">\n  <div></div>\n  <div class=\"content\">\n    <ng-content></ng-content>\n  </div>\n</button>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-280777f2a18219accd4db1e38923db1c",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>checkbox works!</p>\n"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-7810983aa65da59f9ad493250029f4c6",
            "file": "src/app/styleguide/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-colors',\n  templateUrl: './colors.component.html',\n  styleUrls: ['./colors.component.scss']\n})\nexport class ColorsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".color-box{\r\n  width: 200px;\r\n  height: 100px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: var(--color-bg);\r\n}\r\n.typography-box{\r\n  padding: var(--component-padding);\r\n  color: var(--color-primary);\r\n}\r\n\r\n.color-variable{\r\n  color: var(--color-contrast-high);\r\n}",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex--center-y bb\" data-theme='beko'>\n  <div class=\"color-box text--center\">Beko</div>\n  <div class=\"typography-box\">Aa</div>\n  <div class=\"color-variable\">--color-primary: #0083BE</div>\n</div>\n<div class=\"flex flex--center-y bb\" data-theme='hoover'>\n  <div class=\"color-box text--center\">Hoover</div>\n  <div class=\"typography-box\">Aa</div>\n  <div class=\"color-variable\">--color-primary: #DD052b</div>\n</div>\n<div class=\"flex flex--center-y bb\" data-theme='candy'>\n  <div class=\"color-box text--center\">Candy</div>\n  <div class=\"typography-box\">Aa</div>\n  <div class=\"color-variable\">--color-primary: #00AEE6</div>\n</div>\n<div class=\"flex flex--center-y bb\" data-theme='hotpoint'>\n  <div class=\"color-box text--center\">Hotpoint</div>\n  <div class=\"typography-box\">Aa</div>\n  <div class=\"color-variable\">--color-primary: #1FB5BE</div>\n</div>\n"
        },
        {
            "name": "ContainerComponent",
            "id": "component-ContainerComponent-9e4d02c5df9267187315e0c21c533b67",
            "file": "src/app/styleguide/layout/container/container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-container",
            "styleUrls": [
                "./container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component{\r\n    background: var(--color-contrast-medium);\r\n    color: var(--color-contrast-lower);\r\n    padding: var(--component-padding)\r\n}",
                    "styleUrl": "./container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container max-width-adaptive component\">\n    Container test here\n</div>\n"
        },
        {
            "name": "FontSizesComponent",
            "id": "component-FontSizesComponent-2418d98e63d93587fe63445574a5c248",
            "file": "src/app/styleguide/typography/font-sizes/font-sizes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-font-sizes",
            "styleUrls": [
                "./font-sizes.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./font-sizes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-font-sizes',\n  templateUrl: './font-sizes.component.html',\n  styleUrls: ['./font-sizes.component.css']\n})\nexport class FontSizesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./font-sizes.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>font-sizes works!</p>\n"
        },
        {
            "name": "GridComponent",
            "id": "component-GridComponent-041c6a7b2e2119b56f09743bc7708ea4",
            "file": "src/app/styleguide/layout/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grid",
            "styleUrls": [
                "./grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".child{\r\n    background: var(--color-primary);\r\n}",
                    "styleUrl": "./grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container container--adaptive-lg ba\">\n\n  <div class=\"grid\" data-theme='beko'>\n    <div class=\"child col--6 col--sm-4\">1</div>\n    <div class=\"child col--6 col--sm-4\">2</div>\n    <div class=\"child col--12 col--sm-4\">3</div>\n  </div>\n  \n</div>  "
        },
        {
            "name": "HeadingsComponent",
            "id": "component-HeadingsComponent-3f39a4ed391c03aae8d310356f2bb21b",
            "file": "src/app/styleguide/typography/headings/headings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-headings",
            "styleUrls": [
                "./headings.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./headings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-headings',\n  templateUrl: './headings.component.html',\n  styleUrls: ['./headings.component.css']\n})\nexport class HeadingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./headings.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>headings works!</p>\n"
        },
        {
            "name": "IconsComponent",
            "id": "component-IconsComponent-ecca0886525fbe8a8b4f1676699723a7",
            "file": "src/app/styleguide/icons/icons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icons",
            "styleUrls": [
                "./icons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icons',\n  templateUrl: './icons.component.html',\n  styleUrls: ['./icons.component.scss']\n})\nexport class IconsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./icons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>icons works!</p>\n"
        },
        {
            "name": "MeasureComponent",
            "id": "component-MeasureComponent-6acfb7a51b99503b77ec76a161f2f10a",
            "file": "src/app/styleguide/typography/measure/measure.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-measure",
            "styleUrls": [
                "./measure.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./measure.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-measure',\n  templateUrl: './measure.component.html',\n  styleUrls: ['./measure.component.css']\n})\nexport class MeasureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./measure.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>measure works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BordersComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ColorsComponent"
                        },
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "FontSizesComponent"
                        },
                        {
                            "name": "GridComponent"
                        },
                        {
                            "name": "HeadingsComponent"
                        },
                        {
                            "name": "IconsComponent"
                        },
                        {
                            "name": "MeasureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Borders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/typography/borders/borders.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: BordersComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n        <app-borders></app-borders>\r\n    </div>\r\n  `\r\n})"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/colors/colors.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ColorsComponent,\r\n  template: `\r\n    <div class=\"color\">\r\n      <app-colors></app-colors>\r\n    </div>\r\n  `\r\n})"
            },
            {
                "name": "Containers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/layout/container/container.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ContainerComponent,\r\n  template: `\r\n    <app-container></app-container> \r\n  `\r\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "FontSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/typography/font-sizes/font-sizes.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: FontSizesComponent,\r\n  template: `\r\n  <div class=\"text--xs\">--text-xs</div>  \r\n  <div class=\"text--sm\">--text-sm</div>  \r\n  <div class=\"text--md\">--text-md</div>  \r\n  <div class=\"text--lg\">--text-lg</div>  \r\n  <div class=\"text--xl\">--text-xl</div>  \r\n  `\r\n})"
            },
            {
                "name": "Grids",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/layout/grid/grid.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: GridComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-grid></app-grid>\r\n    </div>\r\n  `\r\n})"
            },
            {
                "name": "Headings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/typography/headings/headings.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: HeadingsComponent,\r\n  template: `\r\n  <h1>Level 1 Heading</h1>\r\n  <h2>Level 2 Heading</h2>\r\n  <h3>Level 3 Heading</h3>\r\n  <h4>Level 4 Heading</h4>\r\n  <h5>Level 5 Heading</h5>\r\n  <h6>Level 6 Heading</h6>  \r\n  `\r\n})"
            },
            {
                "name": "Icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/icons/icons.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: IconsComponent,\r\n  template: `\r\n  <div class=\"icon\">Icon test here</div>  \r\n  `\r\n})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ButtonComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-button [isLoading]=\"true\">Hello button</app-button>\r\n    </div>\r\n  `\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ButtonComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-button>Hello button</app-button>\r\n    </div>\r\n  `\r\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ButtonComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-button [type]=\"'secondary'\">Hello button</app-button>\r\n    </div>\r\n  `\r\n})"
            },
            {
                "name": "TextMeasures",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/styleguide/typography/measure/measure.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: MeasureComponent,\r\n  template: `\r\n    <div class=\"measure-wide text-component margin-bottom\">\r\n      <h5>Wide measure</h5>\r\n      <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n    </div>  \r\n    <div class=\"measure text-component margin-bottom\">\r\n      <h5>Normal measure</h5>\r\n      <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n    </div>  \r\n    <div class=\"measure-narrow text-component margin-bottom\">\r\n      <h5>Narrow measure</h5>\r\n      <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n    </div>  \r\n  `\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/styleguide/typography/borders/borders.stories.ts": [
                {
                    "name": "Borders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/typography/borders/borders.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: BordersComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n        <app-borders></app-borders>\r\n    </div>\r\n  `\r\n})"
                }
            ],
            "src/app/styleguide/colors/colors.stories.ts": [
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/colors/colors.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ColorsComponent,\r\n  template: `\r\n    <div class=\"color\">\r\n      <app-colors></app-colors>\r\n    </div>\r\n  `\r\n})"
                }
            ],
            "src/app/styleguide/layout/container/container.stories.ts": [
                {
                    "name": "Containers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/layout/container/container.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ContainerComponent,\r\n  template: `\r\n    <app-container></app-container> \r\n  `\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/styleguide/typography/font-sizes/font-sizes.stories.ts": [
                {
                    "name": "FontSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/typography/font-sizes/font-sizes.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: FontSizesComponent,\r\n  template: `\r\n  <div class=\"text--xs\">--text-xs</div>  \r\n  <div class=\"text--sm\">--text-sm</div>  \r\n  <div class=\"text--md\">--text-md</div>  \r\n  <div class=\"text--lg\">--text-lg</div>  \r\n  <div class=\"text--xl\">--text-xl</div>  \r\n  `\r\n})"
                }
            ],
            "src/app/styleguide/layout/grid/grid.stories.ts": [
                {
                    "name": "Grids",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/layout/grid/grid.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: GridComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-grid></app-grid>\r\n    </div>\r\n  `\r\n})"
                }
            ],
            "src/app/styleguide/typography/headings/headings.stories.ts": [
                {
                    "name": "Headings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/typography/headings/headings.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: HeadingsComponent,\r\n  template: `\r\n  <h1>Level 1 Heading</h1>\r\n  <h2>Level 2 Heading</h2>\r\n  <h3>Level 3 Heading</h3>\r\n  <h4>Level 4 Heading</h4>\r\n  <h5>Level 5 Heading</h5>\r\n  <h6>Level 6 Heading</h6>  \r\n  `\r\n})"
                }
            ],
            "src/app/styleguide/icons/icons.stories.ts": [
                {
                    "name": "Icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/icons/icons.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: IconsComponent,\r\n  template: `\r\n  <div class=\"icon\">Icon test here</div>  \r\n  `\r\n})"
                }
            ],
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ButtonComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-button [isLoading]=\"true\">Hello button</app-button>\r\n    </div>\r\n  `\r\n})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ButtonComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-button>Hello button</app-button>\r\n    </div>\r\n  `\r\n})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ButtonComponent,\r\n  template: `\r\n    <div class=\"story\">\r\n      <app-button [type]=\"'secondary'\">Hello button</app-button>\r\n    </div>\r\n  `\r\n})"
                }
            ],
            "src/app/styleguide/typography/measure/measure.stories.ts": [
                {
                    "name": "TextMeasures",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/styleguide/typography/measure/measure.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: MeasureComponent,\r\n  template: `\r\n    <div class=\"measure-wide text-component margin-bottom\">\r\n      <h5>Wide measure</h5>\r\n      <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n    </div>  \r\n    <div class=\"measure text-component margin-bottom\">\r\n      <h5>Normal measure</h5>\r\n      <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n    </div>  \r\n    <div class=\"measure-narrow text-component margin-bottom\">\r\n      <h5>Narrow measure</h5>\r\n      <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n    </div>  \r\n  `\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/icons/icons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/icons/icons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/container/container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Containers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/layout/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grids",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/borders/borders.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BordersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/borders/borders.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Borders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/font-sizes/font-sizes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FontSizesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/font-sizes/font-sizes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FontSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/headings/headings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeadingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/headings/headings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Headings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/measure/measure.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MeasureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/styleguide/typography/measure/measure.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextMeasures",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}